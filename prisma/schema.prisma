generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model calendar_events {
  event_id       Int       @id @default(autoincrement())
  user_id        Int
  title          String    @db.VarChar(100)
  description    String?
  event_datetime DateTime? @db.Timestamp(6)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  users          users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model tasks {
  task_id       Int         @id @default(autoincrement())
  user_id       Int
  task_type     String      @db.VarChar(20)
  title         String      @db.VarChar(100)
  description   String?
  due_date      DateTime?   @db.Date
  status        String?     @db.VarChar(20)
  created_at    DateTime?   @default(now()) @db.Timestamp(6)
  updated_at    DateTime?   @default(now()) @db.Timestamp(6)
  timeframe_id  Int?
  journal_entry String?
  timeframes    timeframes? @relation(fields: [timeframe_id], references: [timeframe_id], onDelete: NoAction, onUpdate: NoAction)
  users         users       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model timeframes {
  timeframe_id   Int       @id @default(autoincrement())
  user_id        Int
  timeframe_type String    @db.VarChar(10)
  start_date     DateTime? @db.Date
  end_date       DateTime? @db.Date
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  tasks          tasks[]
  users          users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id         Int               @id @default(autoincrement())
  username        String            @db.VarChar(100)
  email           String            @db.VarChar(100)
  password        String            @db.VarChar(100)
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  updated_at      DateTime?         @default(now()) @db.Timestamp(6)
  calendar_events calendar_events[]
  tasks           tasks[]
  timeframes      timeframes[]
}
