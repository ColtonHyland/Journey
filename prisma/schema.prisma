generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("NEON_URL_SHADOW")
}

model calendar_events {
  event_id       String      @id @default(cuid())
  userId         String
  title          String    @db.VarChar(100)
  description    String?
  event_datetime DateTime? @db.Timestamp(6)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  user           User     @relation(fields: [userId], references: [id])
}

model tasks_and_goals {
  task_id       String        @id @default(cuid())
  userId        String
  title         String      @db.VarChar(100)
  description   String?
  type          String      // "task", "weekly_goal", or "quarterly_goal"
  due_date      DateTime?   @db.Date
  status        String?     @db.VarChar(20)
  created_at    DateTime?   @default(now()) @db.Timestamp(6)
  updated_at    DateTime?   @default(now()) @db.Timestamp(6)
  journal_entry String?
  user          User       @relation(fields: [userId], references: [id])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  calendar_events calendar_events[]
  tasks_and_goals tasks_and_goals[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}